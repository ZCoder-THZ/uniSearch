name: Next.js CI with Docker

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci -f

      # Step 4: Set environment variables
      - name: Set environment variables for build
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env

      # Step 5: Build the Next.js app
      - name: Build Next.js app
        run: npm run build --if-present

      # Step 6: Build Docker image with a unique tag
      - name: Build Docker image
        run: |
          docker build -t thanhtikezaw404/unisearch:${{ github.sha }} .

      # Step 7: Ensure Docker logout (reset any existing session)
      - name: Logout from Docker (if any session exists)
        run: docker logout || true

      # Step 8: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 9: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push thanhtikezaw404/unisearch:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up SSH access for deployment
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.sufer_key }}

      # Step 2: Deploy to the remote server
      - name: Deploy to server using Docker
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.sufer_user }}@${{ secrets.sufer_host }} << 'EOF'
            echo 'SSH connected successfully'
            # Pull the latest Docker image
            docker pull thanhtikezaw404/unisearch:${{ github.sha }}

            # Stop and remove any existing container
            docker stop nextjs-app || true
            docker rm nextjs-app || true

            # Run the new container
            docker run -d -p 3000:3000 --name nextjs-app thanhtikezaw404/unisearch:${{ github.sha }}
          EOF
